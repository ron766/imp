html=======================================================
browser object model vs dom
doctype
html5 features
sessionStorage
Input type for phone no = tel

css========================================================
Css box model
Flex box
Pseudo classes and pseudo elements
css framework


js==========================================================
What is 'this' keyword in JavaScript
closure
currying
hoisting
typeof null is obj
undefined vs not defined
cll by value or ref
length or a object
unshift  vs push  arrin js
event bubbling
setTimeout()
setInterval()
higher order functions
callbacks
promise chaining
virtual dom
synthetic events react
spread operator
foreach vs map
js is single/ multi threaded
2 way data binding
prod build vs dev build
find
filter
map
foreach vs map
stop setInterval
var vs let
reduce()
xhr
Clone arr
Generator function
Implicit Coercion
falsy values in JS
phases of event propagation
CORS
== and ===
constructor function
0.1 + 0.2 === 0.3
primitive data types
////////////////////////////
function abacaba() {
    return
    {
      a: 'b'
    }
}

console.log(abacaba());
--output of above = undefined
////////////////////////////
JSON.stringify 2nd arg?? = array / fun / Number / String
If (null)
If ({})
If ([])
Cut "Sunil" = "un"
NaN === NaN
readFile and readStream
Optional chaining
what does restful api mean
Can we return or break from forEach loop for a particular condition
- const arr = [1,2,3]
  const arrCopy = arr;
  arr = [];
  What will be arrCopy?
  --output of above = [1,2,3]
- const arr = [1,2,3].map((data) => {
    if (data === 1 ) return data;
  })
  --output of above = [1, undefined, undefined]


REACT ==========================================================
jsx
reconciliation
components in react
lifecycle
state vs prop
statefull vs stateless
why setState is async
setState callback
nested routes
react router switch
router exact
componentDidCatch
setState vs replaceState
provider in redux
createStore()
hoc
What is the purpose of using super constructor with props argumentl
prop drilling
Service worker
replaceState
memoization
Library vs. Framework?
	- http://voidcanvas.com/framework-vs-library-one-better/
Ref
renderProps
Controlled vs uncontrolled
Car vs next's
usereducer vs useselector



Typescript ======================================================
Enums



NODE===========================================================
Require vs import
First file that runs on server
What is the name of the JavaScript engine that Node.js is built upon?
Does Node.js operate in a single-threaded or multi-threaded fashion?
What is npm?
settimeout and setimmediate
alternative to the Node package manager (npm)
What is the difference between dependencies and devDependencies?
What is REPL and how can you access it from the command line?
prod build vs dev build
download a file using express
middleware
protect a particular section of APIs
Event-driven programming
Event loop in Node.js
callback vs promises
callback hell
ESLint
Client side caching vs server side caching
What is libuv?
put vs patch
Import vs require
Import / require async?
What is the first file that runs on the server


UT =============================================================




SERVER==========================================================
Cloud services
aws
aws services
Load balancer
Microservice / monolithic architecture
aws lamda vs docker
Redis
Jenkins
Redis for webpage
Elastic search
Kubernetes
	- https://www.simplilearn.com/tutorials/kubernetes-tutorial/kubernetes-interview-questions
- docker
- docker image vs class



DB==============================================================
sharding
join vs views
Dbms
Acid props
Nosql vs sql
join
Lookup
odm vs orm


Python =========================================================
pickling and unpickling
Json


RANDOM TEcH q ==================================================
Oops
Func overloading vs func overriding 



GENERIC =======================================================
Urself
Fav subs
Ask us any q
Problem solving
Syntax


JAVA ==========================================================
- oops
- pure top
- System.out.println
- public static void main(String args[]){
- overloading vs overriding
- anonymous block
- access specifiers
- threads


REST API ===========================================================
- 404 = not found
- 400 = bad request
- 500 = internal server
- 401 = unauthorised
- 403 = forbidden
- 204 = no content | cannot send body
- 415 = unsupported media
- soap vs rest
- https://www.guru99.com/rest-api-interview-question-answers.html
	- Explain what is REST and RESTFUL?
	- Mention what are the HTTP methods supported by REST?
	- what is the difference between PUT and POST?
	- 

GIT =========================================================== 	
- Git
- git vs github
- 



C++ ===========================================================
- operator overloading




LOGIC =========================================================
- 	function abc() {
 		for(let i=0; i<=100; i++) {
		console.log(i);
	 }
	 console.log('...');
	}


CI / CD
https://www.fullstack.cafe/blog/15-continuous-integration-interview-questions-in-2018


Webpack =======================================================
- resolve a file type



https://docs.google.com/spreadsheets/d/1xNegKV3QDMpXKDx1J4lokxHwQTOG7eZx1zQQ1UICkkk/edit?ts=60892ac3#gid=0








































